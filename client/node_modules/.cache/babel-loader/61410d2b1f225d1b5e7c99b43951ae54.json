{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { randomTetromino } from '../tetrominos';\nexport const usePlayer = () => {\n  _s();\n\n  const [player, setPlayer] = useState({\n    pos: {\n      x: 0,\n      y: 0\n    },\n    tetromino: randomTetromino().shape,\n    collided: false\n  });\n\n  const updatePlayerPos = _ref => {\n    let {\n      x,\n      y,\n      collided\n    } = _ref;\n    setPlayer(prev => ({ ...prev,\n      pos: {\n        x: prev.pos.x += x,\n        y: prev.pos.y += y\n      },\n      collided\n    }));\n  };\n\n  return [player];\n};\n\n_s(usePlayer, \"j3FOCqrDQ2NPgbi0kVJDeWy4Y1M=\");","map":{"version":3,"sources":["/Users/christopherarmstrong/Desktop/tetris/Tetris/src/hooks/usePlayer.js"],"names":["useState","randomTetromino","usePlayer","player","setPlayer","pos","x","y","tetromino","shape","collided","updatePlayerPos","prev"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,eAAT,QAAgC,eAAhC;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC;AAEjCK,IAAAA,GAAG,EAAE;AAACC,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE;AAAV,KAF4B;AAGjCC,IAAAA,SAAS,EAAEP,eAAe,GAAGQ,KAHI;AAIjCC,IAAAA,QAAQ,EAAE;AAJuB,GAAD,CAApC;;AAQA,QAAMC,eAAe,GAAG,QAAwB;AAAA,QAAvB;AAAEL,MAAAA,CAAF;AAAKC,MAAAA,CAAL;AAAQG,MAAAA;AAAR,KAAuB;AAC5CN,IAAAA,SAAS,CAACQ,IAAI,KAAK,EACf,GAAGA,IADY;AAEfP,MAAAA,GAAG,EAAE;AAAEC,QAAAA,CAAC,EAAGM,IAAI,CAACP,GAAL,CAASC,CAAT,IAAcA,CAApB;AAAwBC,QAAAA,CAAC,EAAGK,IAAI,CAACP,GAAL,CAASE,CAAT,IAAcA;AAA1C,OAFU;AAGfG,MAAAA;AAHe,KAAL,CAAL,CAAT;AAKH,GAND;;AAQA,SAAO,CAACP,MAAD,CAAP;AAGH,CApBM;;GAAMD,S","sourcesContent":["import { useState } from 'react';\nimport { randomTetromino } from '../tetrominos';\n\nexport const usePlayer = () => {\n    const [player, setPlayer] = useState({\n\n        pos: {x: 0, y: 0},\n        tetromino: randomTetromino().shape,\n        collided: false,\n\n    });\n\n    const updatePlayerPos = ({ x, y, collided }) => {\n        setPlayer(prev => ({\n            ...prev,\n            pos: { x: (prev.pos.x += x), y: (prev.pos.y += y)},\n            collided, \n        }))\n    }\n\n    return [player];\n    \n\n}"]},"metadata":{},"sourceType":"module"}