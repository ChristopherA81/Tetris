{"ast":null,"code":"var _jsxFileName = \"/Users/christopherarmstrong/Desktop/tetris/Tetris/src/components/Tetris.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Display from \"./Display\";\nimport { StyledTetrisWrapper, StyledTetris } from \"./styles/StyledTetris\";\nimport Stage from \"./Stage\";\nimport StartButton from \"./StartButton\";\nimport { usePlayer } from \"../hooks/usePlayer\";\nimport { useStage } from \"../hooks/useStage\";\nimport { createStage } from \"../gameHelpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tetris = () => {\n  _s();\n\n  const [droptime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [player] = usePlayer();\n  const [stage, setStage] = useStage(player);\n  console.log('re-render');\n\n  const movePlayer = dir => {};\n\n  const startGame = () => {};\n\n  const drop = () => {};\n\n  const dropPlayer = () => {};\n\n  const move = _ref => {\n    let {\n      keyCode\n    } = _ref;\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledTetrisWrapper, {\n    role: \"button\",\n    tabIndex: \"0\",\n    onKeyDown: e => move(e),\n    children: /*#__PURE__*/_jsxDEV(StyledTetris, {\n      children: [/*#__PURE__*/_jsxDEV(Stage, {\n        stage: stage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        children: [gameOver ? /*#__PURE__*/_jsxDEV(Display, {\n          gameOver: gameOver,\n          text: \"Game Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Display, {\n            text: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Display, {\n            text: \"Rows\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Display, {\n            text: \"Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StartButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tetris, \"GaiI45EKteW/NQOCuQDCoffaG6g=\", false, function () {\n  return [usePlayer, useStage];\n});\n\n_c = Tetris;\nexport default Tetris;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tetris\");","map":{"version":3,"sources":["/Users/christopherarmstrong/Desktop/tetris/Tetris/src/components/Tetris.js"],"names":["React","useState","Display","StyledTetrisWrapper","StyledTetris","Stage","StartButton","usePlayer","useStage","createStage","Tetris","droptime","setDropTime","gameOver","setGameOver","player","stage","setStage","console","log","movePlayer","dir","startGame","drop","dropPlayer","move","keyCode","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,mBAAT,EAA8BC,YAA9B,QAAkD,uBAAlD;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,WAAT,QAA4B,gBAA5B;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM,CAACc,MAAD,IAAWR,SAAS,EAA1B;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACO,MAAD,CAAlC;AAKEG,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;;AAEA,QAAMC,UAAU,GAAGC,GAAG,IAAI,CAEzB,CAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM,CAEvB,CAFD;;AAIA,QAAMC,IAAI,GAAG,MAAM,CAElB,CAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM,CAExB,CAFD;;AAIA,QAAMC,IAAI,GAAG,QAAiB;AAAA,QAAhB;AAAEC,MAAAA;AAAF,KAAgB;AAE7B,GAFD;;AAGF,sBACE,QAAC,mBAAD;AAAqB,IAAA,IAAI,EAAC,QAA1B;AAAmC,IAAA,QAAQ,EAAC,GAA5C;AAAgD,IAAA,SAAS,EAAEC,CAAC,IAAIF,IAAI,CAACE,CAAD,CAApE;AAAA,2BACE,QAAC,YAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEX;AAAd;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAA,mBACGH,QAAQ,gBACP,QAAC,OAAD;AAAS,UAAA,QAAQ,EAAEA,QAAnB;AAA6B,UAAA,IAAI,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADO,gBAGT;AAAA,kCACE,QAAC,OAAD;AAAS,YAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,OAAD;AAAS,YAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,OAAD;AAAS,YAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAWE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CApDD;;GAAMH,M;UAIaH,S,EACSC,Q;;;KALtBE,M;AAsDN,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Display from \"./Display\";\nimport { StyledTetrisWrapper, StyledTetris } from \"./styles/StyledTetris\";\nimport Stage from \"./Stage\";\nimport StartButton from \"./StartButton\";\nimport { usePlayer } from \"../hooks/usePlayer\";\nimport { useStage } from \"../hooks/useStage\";\nimport { createStage } from \"../gameHelpers\";\n\nconst Tetris = () => {\n  const [droptime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n\n  const [player] = usePlayer();\n  const [stage, setStage] = useStage(player);\n\n\n\n\n    console.log('re-render');\n\n    const movePlayer = dir => {\n\n    }\n\n    const startGame = () => {\n\n    }\n\n    const drop = () => {\n\n    }\n\n    const dropPlayer = () => {\n\n    }\n\n    const move = ({ keyCode }) => {\n\n    }\n  return (\n    <StyledTetrisWrapper role=\"button\" tabIndex=\"0\" onKeyDown={e => move(e)}>\n      <StyledTetris>\n        <Stage stage={stage} />\n        {/* sidebar */}\n        <aside>\n          {gameOver ? (\n            <Display gameOver={gameOver} text=\"Game Over\" />\n          ) : (\n          <div>\n            <Display text=\"Score\" />\n            <Display text=\"Rows\" />\n            <Display text=\"Level\" />\n          </div>\n          )}\n\n          <StartButton />\n        </aside>\n      </StyledTetris>\n    </StyledTetrisWrapper>\n  );\n};\n\nexport default Tetris;\n"]},"metadata":{},"sourceType":"module"}