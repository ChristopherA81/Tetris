{"ast":null,"code":"var _jsxFileName = \"/Users/christopherarmstrong/Desktop/tetris/Tetris/src/components/Tetris.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Display from \"./Display\";\nimport { StyledTetrisWrapper, StyledTetris } from \"./styles/StyledTetris\";\nimport Stage from \"./Stage\";\nimport StartButton from \"./StartButton\";\nimport { usePlayer } from \"../hooks/usePlayer\";\nimport { useStage } from \"../hooks/useStage\";\nimport { createStage, checkCollision } from \"../gameHelpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tetris = () => {\n  _s();\n\n  const [droptime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [player, updatePlayerPos, resetPlayer] = usePlayer();\n  const [stage, setStage] = useStage(player);\n  console.log(\"re-render\");\n\n  const movePlayer = dir => {\n    if (!checkCollision(player, stage, {\n      x: dir,\n      y: 0\n    })) {\n      updatePlayerPos({\n        x: dir,\n        y: 0\n      });\n    }\n  };\n\n  const startGame = () => {\n    // Reset Everything\n    setStage(createStage());\n    resetPlayer();\n  };\n\n  const drop = () => {\n    updatePlayerPos({\n      x: 0,\n      y: 1,\n      collided: false\n    });\n  };\n\n  const dropPlayer = () => {\n    drop();\n  };\n\n  const move = _ref => {\n    let {\n      keyCode\n    } = _ref;\n\n    if (!gameOver) {\n      if (keyCode === 37) {\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledTetrisWrapper, {\n    role: \"button\",\n    tabIndex: \"0\",\n    onKeyDown: e => move(e),\n    children: /*#__PURE__*/_jsxDEV(StyledTetris, {\n      children: [/*#__PURE__*/_jsxDEV(Stage, {\n        stage: stage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        children: [gameOver ? /*#__PURE__*/_jsxDEV(Display, {\n          gameOver: gameOver,\n          text: \"Game Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Display, {\n            text: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Display, {\n            text: \"Rows\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Display, {\n            text: \"Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StartButton, {\n          callback: startGame\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tetris, \"bi1lJ6XWBpCOjuHjVuyx4rOOWoE=\", false, function () {\n  return [usePlayer, useStage];\n});\n\n_c = Tetris;\nexport default Tetris;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tetris\");","map":{"version":3,"sources":["/Users/christopherarmstrong/Desktop/tetris/Tetris/src/components/Tetris.js"],"names":["React","useState","Display","StyledTetrisWrapper","StyledTetris","Stage","StartButton","usePlayer","useStage","createStage","checkCollision","Tetris","droptime","setDropTime","gameOver","setGameOver","player","updatePlayerPos","resetPlayer","stage","setStage","console","log","movePlayer","dir","x","y","startGame","drop","collided","dropPlayer","move","keyCode","e"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Display from \"./Display\";\nimport { StyledTetrisWrapper, StyledTetris } from \"./styles/StyledTetris\";\nimport Stage from \"./Stage\";\nimport StartButton from \"./StartButton\";\nimport { usePlayer } from \"../hooks/usePlayer\";\nimport { useStage } from \"../hooks/useStage\";\nimport { createStage, checkCollision } from \"../gameHelpers\";\n\nconst Tetris = () => {\n  const [droptime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n\n  const [player, updatePlayerPos, resetPlayer] = usePlayer();\n  const [stage, setStage] = useStage(player);\n\n  console.log(\"re-render\");\n\n  const movePlayer = (dir) => {\n    if (!checkCollision(player, stage, { x: dir, y: 0})) {\n      updatePlayerPos({ x: dir, y: 0 });\n\n    }\n    \n  };\n\n  const startGame = () => {\n    // Reset Everything\n    setStage(createStage());\n    resetPlayer();\n  };\n\n  const drop = () => {\n    updatePlayerPos({ x: 0, y: 1, collided: false });\n  };\n\n  const dropPlayer = () => {\n    drop();\n  };\n\n  const move = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      }\n    }\n  };\n  return (\n    <StyledTetrisWrapper role=\"button\" tabIndex=\"0\" onKeyDown={(e) => move(e)}>\n      <StyledTetris>\n        <Stage stage={stage} />\n        {/* sidebar */}\n        <aside>\n          {gameOver ? (\n            <Display gameOver={gameOver} text=\"Game Over\" />\n          ) : (\n            <div>\n              <Display text=\"Score\" />\n              <Display text=\"Rows\" />\n              <Display text=\"Level\" />\n            </div>\n          )}\n\n          <StartButton callback={startGame} />\n        </aside>\n      </StyledTetris>\n    </StyledTetrisWrapper>\n  );\n};\n\nexport default Tetris;\n"]},"metadata":{},"sourceType":"module"}